<?php

namespace App\DataFixtures;

use App\Entity\Price;
use App\Entity\Symbol;
use App\Entity\User;
use App\Entity\UserSymbol;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Persistence\ObjectManager;

class PriceFixture extends Fixture
{
    public const PRICE_TO_TOP_SYMBOL = 'SOLBUSD';
    public const PRICE_TO_BOTTOM_SYMBOL = 'SOL2BUSD';
    public const PRICE_TOP_BOTTOM_TOP_SYMBOL = 'ETHBUSD';
    public const NOT_RECENTLY_CHANGED_PRICE_SYMBOL = 'ETH2BUSD';
    public const RECENTLY_CHANGED_PRICE_SYMBOL = 'BTCBUSD';
    public const RECENTLY_CHANGED_PRICE_WITH_PLATO_SYMBOL = 'ADABUSD';
    public const TWT_RISING_ON_INTERVAL_AND_THEN_FALLING_ON_DISTANCE_SYMBOL = 'TWTUSDT';
    public const MINA_FALLING_AFTER_RISING_WITH_BIG_DIFF_BETWEEN_HIGH_AND_LOW_SYMBOL = 'MINAUSDT';
    public const BTC_RISE_THEN_FALL_SYMBOL = 'BTCUSDT';
    private const SYMBOLS = [
        self::PRICE_TO_TOP_SYMBOL,
        self::PRICE_TO_BOTTOM_SYMBOL,
        self::PRICE_TOP_BOTTOM_TOP_SYMBOL,
        self::NOT_RECENTLY_CHANGED_PRICE_SYMBOL,
        self::RECENTLY_CHANGED_PRICE_SYMBOL,
        self::RECENTLY_CHANGED_PRICE_WITH_PLATO_SYMBOL,
        self::TWT_RISING_ON_INTERVAL_AND_THEN_FALLING_ON_DISTANCE_SYMBOL,
        self::MINA_FALLING_AFTER_RISING_WITH_BIG_DIFF_BETWEEN_HIGH_AND_LOW_SYMBOL,
        self::BTC_RISE_THEN_FALL_SYMBOL,
    ];

    private const CHANGING_PRICE_15_PERCENT_UP = [[28.23,'SOLBUSD'], [29.05,'SOLBUSD'], [29.41,'SOLBUSD'], [29.38,'SOLBUSD'], [29.36,'SOLBUSD'], [29.74,'SOLBUSD'], [30.98,'SOLBUSD'], [29.9,'SOLBUSD'], [29.92,'SOLBUSD'], [29.14,'SOLBUSD'], [29.07,'SOLBUSD'], [29.3,'SOLBUSD'], [29.51,'SOLBUSD'], [30.23,'SOLBUSD'], [30.99,'SOLBUSD'], [30.63,'SOLBUSD'], [30.28,'SOLBUSD'], [28.32,'SOLBUSD'], [28.87,'SOLBUSD'], [26.95,'SOLBUSD'], [26.19,'SOLBUSD'], [27.47,'SOLBUSD'], [28.55,'SOLBUSD'], [27.13,'SOLBUSD'], [28.11,'SOLBUSD'], [28.59,'SOLBUSD'], [28.3,'SOLBUSD'], [28.17,'SOLBUSD'], [28.06,'SOLBUSD'], [28.21,'SOLBUSD'], [27.89,'SOLBUSD'], [27,'SOLBUSD'], [27.03,'SOLBUSD'], [26.45,'SOLBUSD'], [26.82,'SOLBUSD'], [27.37,'SOLBUSD'], [27.61,'SOLBUSD'], [26.2,'SOLBUSD'], [28,'SOLBUSD'], [27.81,'SOLBUSD'], [28.42,'SOLBUSD'], [28.78,'SOLBUSD'], [28.41,'SOLBUSD'], [29.31,'SOLBUSD'], [29.53,'SOLBUSD'], [30.57,'SOLBUSD'], [31.26,'SOLBUSD'], [31.93,'SOLBUSD'], [31.94,'SOLBUSD'], [32.53,'SOLBUSD'], [32.88,'SOLBUSD'], [33.34,'SOLBUSD'], [33.55,'SOLBUSD'], [33.96,'SOLBUSD'], [33.47,'SOLBUSD'], [31.87,'SOLBUSD'], [32.5,'SOLBUSD'], [32.72,'SOLBUSD'], [32.59,'SOLBUSD'], [32.56,'SOLBUSD'], [32.99,'SOLBUSD'], [33.12,'SOLBUSD'], [32.15,'SOLBUSD'], [31.71,'SOLBUSD'], [31.68,'SOLBUSD'], [32.27,'SOLBUSD'], [31.66,'SOLBUSD'], [32.96,'SOLBUSD'], [33.98,'SOLBUSD'], [33.91,'SOLBUSD'], [34.58,'SOLBUSD'], [34.35,'SOLBUSD'], [33.77,'SOLBUSD'], [34.09,'SOLBUSD'], [34.44,'SOLBUSD'], [33.87,'SOLBUSD'], [33.95,'SOLBUSD'], [33.74,'SOLBUSD'], [33.91,'SOLBUSD'], [35.14,'SOLBUSD'], [34.8,'SOLBUSD'], [35.44,'SOLBUSD'], [36.39,'SOLBUSD'], [36.79,'SOLBUSD'], [36.49,'SOLBUSD'], [37.67,'SOLBUSD'],];

    private const CHANGING_PRICE_TOP_BOTTOM_TOP = [1085.49, 1087.03, 1074.85, 1081.08, 1077.76, 1078.62, 1076.88, 1018.5, 1002.43, 989.04, 993.62, 1004.87, 1003.99, 999.14, 998.52, 991.59, 988.12, 981.44, 960.95, 937.23, 913.73, 902.89, 941.74, 990.6, 993.29, 989.88, 960.07, 949.67, 951.65, 965.57, 944.42, 954.56, 954.26, 966.15, 1062.52, 1054.16, 1032.01, 1019.41, 1033.41, 1043.41, 1053.41, 1063.41, 1073.41, 1083.41,];

    private const NOT_RECENTLY_CHANGED_PRICE = [1590.19, 1569.75, 1561.56, 1563.94, 1576.37, 1589.29, 1575.2, 1576.33, 1589.56, 1585.29, 1578.03, 1543.95, 1536.93,];
    // diff between NOT_RECENTLY_CHANGED_PRICE in the last price 1590.19 which means that it started rising up
    private const RECENTLY_CHANGED_PRICE = [1569.75, 1561.56, 1563.94, 1576.37, 1589.29, 1575.2, 1576.33, 1589.56, 1585.29, 1578.03, 1543.95, 1536.93,];

    private const RECENTLY_CHANGED_PRICE_WITH_PLATO = [0.3487, 0.3548, 0.351, 0.3452, 0.3429, 0.3504, 0.3722, 0.3722, 0.3709,];

    private const TWT_RISING_ON_INTERVAL_AND_THEN_FALLING_ON_DISTANCE = [1.4811, 1.49, 1.4823, 1.4797, 1.4778, 1.4768, 1.4844, 1.4847, 1.4876, 1.4922, 1.4932, 1.4945, 1.4823, 1.488, 1.4925, 1.4899, 1.489, 1.4864, 1.4847, 1.4933, 1.4893, 1.4889, 1.4906, 1.4871, 1.48, 1.4912, 1.4864, 1.4808, 1.4803, 1.4778, 1.487, 1.4883, 1.4937, 1.4842, 1.485, 1.493, 1.4897, 1.5196, 1.517, 1.5167, 1.5427, 1.5405, 1.5453, 1.5336, 1.5378, 1.5457, 1.5445, 1.542, 1.5387, 1.5452, 1.5517, 1.5532, 1.5622, 1.5776, 1.5836, 1.5708, 1.5732, 1.584, 1.5904, 1.5829, 1.5851, 1.587, 1.61, 1.667, 1.67, 1.6748, 1.6796, 1.5742, 1.5785, 1.5238, 1.5549, 1.5759, 1.5878, 1.5838, 1.5945, 1.575, 1.5847, 1.5844, 1.5755, 1.5797, 1.5936, 1.5841, 1.576, 1.5772, 1.5702, 1.5445, 1.5531, 1.5642, 1.5559, 1.5593, 1.5601, 1.5579, 1.5617, 1.5706, 1.565, 1.5798, 1.5787, 1.5694, 1.5707, 1.5522, 1.5552, 1.553, 1.5437, 1.5463, 1.5556, 1.5565, 1.5531, 1.5556, 1.5585, 1.5532, 1.554, 1.537, 1.5451, 1.5358, 1.5279, 1.5201, 1.5301, 1.5249, 1.5252, 1.5417, 1.5326, 1.5255, 1.5189, 1.5241, 1.5209, 1.5271, 1.5426, 1.5451, 1.5477, 1.5562, 1.5522, 1.579, 1.5664, 1.5689, 1.5704, 1.5557, 1.5712, 1.5683, 1.5706, 1.5694, 1.5637, 1.5604, 1.5705, 1.5532, 1.5554, 1.5468, 1.5551, 1.5674, 1.5705, 1.5954, 1.5887, 1.5753, 1.5771, 1.577, 1.5843, 1.588, 1.5937, 1.5919, 1.6056, 1.593, 1.5885, 1.5573, 1.5432, 1.5574, 1.5537, 1.556, 1.5559, 1.5603, 1.5588, 1.5578, 1.5607, 1.5584, 1.5578, 1.5524, 1.5523, 1.5538, 1.5513, 1.5625, 1.5557, 1.5555, 1.5496, 1.5514, 1.5461, 1.5453, 1.5469, 1.5462, 1.547, 1.549, 1.5434, 1.5442, 1.5352, 1.5396, 1.5404, 1.5423, 1.5367, 1.5252, 1.5186, 1.5297, 1.5331, 1.5359, 1.5389, 1.5255, 1.5379, 1.5349, 1.5342, 1.5372, 1.533, 1.5371, 1.5394, 1.546, 1.544, 1.5462, 1.545, 1.5417, 1.5454, 1.5441, 1.5462, 1.5494, 1.5472, 1.5529, 1.5525, 1.5506, 1.5546, 1.5546, 1.5673, 1.5614, 1.5536, 1.5533, 1.555, 1.5552, 1.5582, 1.5506, 1.5504, 1.543, 1.5435, 1.5403, 1.5407, 1.5449, 1.547, 1.5466, 1.545, 1.5436, 1.5403, 1.5384, 1.5415, 1.5425, 1.5375, 1.54, 1.5403, 1.53, 1.5346, 1.5383, 1.5377, 1.5319, 1.527, 1.5361, 1.5311, 1.5255, 1.5314, 1.5372, 1.5368, 1.5306, 1.5249, 1.5253, 1.5247, 1.53, 1.5283, 1.5339, 1.5335, 1.5385, 1.5345, 1.5316, 1.5351, 1.5358, 1.532, 1.5368, 1.5357, 1.5397, 1.5492, 1.5456, 1.547, 1.5439, 1.545, 1.556, 1.558, 1.5616, 1.5541, 1.5523, 1.551, 1.5534, 1.5519, 1.5531, 1.5492, 1.5446, 1.553, 1.544, 1.5502, 1.5503, 1.5531, 1.5504, 1.5537, 1.5552, 1.555, 1.5513, 1.5444, 1.5471, 1.5421, 1.543, 1.5219, 1.5261, 1.5347, 1.5345, 1.5379, 1.5275, 1.5358, 1.5418, 1.5374, 1.5418, 1.5418, 1.5423, 1.5483, 1.5426, 1.5399, 1.5454, 1.5469, 1.5391, 1.5294, 1.5303, 1.5267, 1.5297, 1.5243, 1.5253, 1.5279, 1.5344, 1.5324, 1.5328, 1.5417, 1.5358, 1.538, 1.5344, 1.5104, 1.3983, 1.4218, 1.4234, 1.4299, 1.4468, 1.4438, 1.4496, 1.4423, 1.4274, 1.4136, 1.4138, 1.4177, 1.4267, 1.4288, 1.4208, 1.4023, 1.4077, 1.4133, 1.4258, 1.4155, 1.418, 1.4236, 1.4234, 1.4189, 1.4322, 1.4336, 1.4304, 1.4327, 1.4339, 1.433, 1.4313, 1.4332, 1.4333, 1.4317, 1.4196, 1.4262, 1.4309, 1.4268, 1.421, 1.4148, 1.4161, 1.4099, 1.4035, 1.4139, 1.4093, 1.4191, 1.4259, 1.4304, 1.4445, 1.4391, 1.4348, 1.4201, 1.4154, 1.4319, 1.4367, 1.4403, 1.4535, 1.4505, 1.446, 1.4347, 1.4407, 1.442, 1.4453, 1.4491, 1.4495, 1.4471, 1.4532, 1.4532, 1.466, 1.4614, 1.4652, 1.468, 1.4643, 1.4451, 1.4336, 1.4375, 1.4318, 1.4285, 1.439, 1.4317, 1.4396, 1.4387, 1.4342, 1.4373, 1.4293, 1.4347, 1.4331, 1.434, 1.4357, 1.4408, 1.4409, 1.4354, 1.442, 1.4435, 1.4406, 1.4398, 1.4418, 1.4599, 1.4545, 1.4602, 1.4609, 1.465, 1.4632, 1.4649, 1.4827, 1.5071, 1.5012, 1.5092, 1.5168, 1.515, 1.5175, 1.5267, 1.5122, 1.5153, 1.522, 1.5097, 1.5167, 1.5071, 1.5075, 1.51, 1.517, 1.5183, 1.5155, 1.5117, 1.5143, 1.5269, 1.5435, 1.5366, 1.535, 1.5337, 1.5218, 1.5397, 1.5207, 1.5073, 1.508, 1.5134, 1.5216, 1.5212, 1.5168, 1.5152, 1.5076, 1.5177, 1.5249, 1.5215, 1.5328, 1.5528, 1.5544, 1.5663, 1.5626, 1.5624, 1.5568, 1.5518, 1.5527, 1.5463, 1.5363, 1.5383, 1.5447, 1.5404, 1.521, 1.5129, 1.5092, 1.5146, 1.5035, 1.506, 1.5031, 1.499, 1.4989, 1.5009, 1.4993, 1.4998, 1.5016, 1.5108, 1.5363, 1.5271, 1.5223, 1.5185, 1.5182, 1.5232, 1.524, 1.5166, 1.5141, 1.5243, 1.5238, 1.5205, 1.5134, 1.5236, 1.5176, 1.5174, 1.5209, 1.528, 1.5148, 1.5222, 1.5277, 1.528, 1.5403, 1.5439, 1.5342, 1.528, 1.5259, 1.5214, 1.5135, 1.4914, 1.4915, 1.5069, 1.4935, 1.4991, 1.5111, 1.514, 1.5258, 1.5167, 1.521, 1.5152, 1.5194, 1.5273, 1.5212, 1.5228, 1.5207, 1.529, 1.5252, 1.522, 1.5273, 1.5256, 1.5169, 1.5215, 1.5171, 1.5148, 1.518, 1.5197, 1.5248, 1.5262, 1.5311, 1.5304, 1.5381, 1.5467, 1.5394, 1.5283, 1.5264, 1.5203, 1.5332, 1.5385, 1.523, 1.5306, 1.5252, 1.5342, 1.5326, 1.5283, 1.5348, 1.5186, 1.528, 1.5295, 1.5252, 1.5311, 1.5277, 1.5236, 1.5284, 1.5276, 1.5282, 1.525, 1.5193, 1.5282, 1.5368, 1.5368, 1.5418, 1.5515, 1.5763, 1.551, 1.5499, 1.5486, 1.5531, 1.5428, 1.5465, 1.5428, 1.5443, 1.54, 1.5303, 1.5324, 1.5365, 1.5312, 1.536, 1.5271, 1.5265, 1.5226, 1.5311, 1.5158, 1.5208, 1.5238, 1.5247, 1.5275, 1.5287, 1.534, 1.5329, 1.533, 1.5319, 1.5321, 1.5313, 1.5303, 1.5259, 1.5182, 1.5198, 1.4985, 1.4561, 1.4678, 1.4771, 1.481, 1.4779, 1.4897, 1.4787, 1.4907, 1.496, 1.497, 1.4961, 1.4896, 1.4893, 1.4896, 1.4901, 1.488, 1.496, 1.5074, 1.5021, 1.5028, 1.4892, 1.4877, 1.4842, 1.4808, 1.4717, 1.4764, 1.4743, 1.4625, 1.4725, 1.4752, 1.4838, 1.4722, 1.4649, 1.4522, 1.46, 1.4644, 1.4713, 1.4679, 1.4601, 1.4702, 1.47, 1.4759, 1.475, 1.4776, 1.4886, 1.49, 1.495, 1.5253, 1.5164, 1.4957, 1.508, 1.5094, 1.5093, 1.527, 1.5312, 1.5235, 1.5352, 1.5213, 1.5245, 1.5429, 1.5316, 1.5265, 1.5179, 1.5269, 1.5148, 1.5231, 1.5151, 1.5089, 1.5043, 1.5035, 1.5011, 1.5011, 1.5011, 1.4919, 1.4948, 1.504, 1.515, 1.5191, 1.5143, 1.531, 1.533, 1.5177, 1.528, 1.5177, 1.5183, 1.5101, 1.5134, 1.5064, 1.5228, 1.5108, 1.519, 1.516, 1.5185, 1.5236, 1.5223, 1.5223, 1.5187, 1.5151, 1.5092, 1.5085, 1.5037, 1.4967, 1.497, 1.4833, 1.4943, 1.5001, 1.4999, 1.4973, 1.5061, 1.5043, 1.5149, 1.5193, 1.5221, 1.5267, 1.5355, 1.5322, 1.5213, 1.5208, 1.5207, 1.5175, 1.516, 1.5152, 1.5245, 1.5205, 1.5213, 1.512, 1.5102, 1.5102, 1.5058, 1.524, 1.5667, 1.5917, 1.5814, 1.6191, 1.6685, 1.6918, 1.7902, 1.7834, 1.7538, 1.7777, 1.7306, 1.68, 1.6918, 1.6882, 1.6987, 1.719, 1.7323, 1.7, 1.7774, 1.7545, 1.7349, 1.754, 1.7474, 1.7291, 1.7383, 1.7956, 1.7732, 1.7523, 1.7614, 1.7609, 1.751, 1.7554, 1.7386, 1.7384, 1.7232, 1.7185, 1.7041, 1.7405, 1.7415, 1.768, 1.74, 1.7592, 1.7359, 1.7212, 1.697, 1.7077, 1.705, 1.691, 1.7105, 1.7119, 1.7375, 1.742, 1.7223, 1.732, 1.7218, 1.7116, 1.7224, 1.7287, 1.72, 1.768, 1.7638, 1.75, 1.7724, 1.7613, 1.7609, 1.7742, 1.7434, 1.7294, 1.7449, 1.7287, 1.7276, 1.7338, 1.7222, 1.7262, 1.726, 1.7394, 1.7343, 1.7337, 1.7352, 1.7354, 1.7556, 1.7351, 1.7313, 1.7513, 1.7518, 1.7447, 1.7534, 1.7721, 1.7538, 1.7525, 1.7505, 1.7535, 1.7736, 1.768, 1.8039, 1.8219, 1.8292, 1.8151, 1.8484, 1.8224, 1.7906, 1.8103, 1.7981, 1.7912, 1.8028, 1.7846, 1.787, 1.7771, 1.7862, 1.7868, 1.7883, 1.7687, 1.7546, 1.7369, 1.7219, 1.7378, 1.7222, 1.7036, 1.6965, 1.6875];

    private const MINA_FALLING_AFTER_RISING_WITH_BIG_DIFF_BETWEEN_HIGH_AND_LOW = [0.888, 0.863, 0.847, 0.858, 0.859, 0.884, 0.912, 0.922, 0.914, 0.901, 0.91, 0.902, 0.886, 0.888, 0.895, 0.94, 0.941, 0.933, 0.959, 0.95, 0.966, 0.975, 0.956, 0.948, 0.964, 0.981, 0.977, 1.054, 1.071, 1.06, 1.053, 1.051, 1.044, 1.064, 1.055, 1.051, 1.054, 1.072, 1.071, 1.078, 1.07, 1.066, 1.069, 1.062, 1.084, 1.13, 1.138, 1.141, 1.121, 1.114, 1.134, 1.12, 1.088, 1.112, 1.112, 1.092, 1.106, 1.09, 1.114, 1.122, 1.095, 1.063, 1.071, 1.073, 1.068, 1.081, 1.073, 1.07, 1.1, 1.121, 1.105, 1.115, 1.119, 1.125, 1.102, 1.108, 1.092, 1.098, 1.092, 1.079, 1.062, 1.03, 1.039, 1.028, 1.02, 1.028, 1.033, 1.036, 1.036, 1.034, 1.023, 1.023, 0.998, 1.007, 1.008, 0.999, 1.003, 0.985, 1.003, 0.982, 0.972, 0.962, 0.994, 0.998, 1, 1.03, 1.021, 1.01, 1.012, 1.015, 1.003, 1.017, 1.021, 0.982, 0.938, 0.936, 0.939, 0.938, 0.947, 0.949, 0.932, 0.944, 0.933, 0.918, 0.905, 0.899, 0.918, 0.921, 0.909, 0.904, 0.912, 0.897, 0.905, 0.914, 0.918, 0.924, 0.927, 0.926, 0.929, 0.917, 0.919, 0.911, 0.912, 0.933, 0.927, 0.945, 0.937, 0.932, 0.932, 0.946, 0.95, 0.936, 0.93, 0.929, 0.923, 0.93, 0.929, 0.938, 0.93, 0.944, 0.945, 0.929, 0.915, 0.921, 0.935, 0.941, 0.932, 0.929, 0.921, 0.922, 0.92, 0.912, 0.981, 0.929, 0.999, 0.984, 0.986, 0.983, 0.992, 1.005, 1.002, 0.998, 0.996, 1.01, 1.01, 1.003, 1.001, 1, 1.013, 1.013, 1.02, 1.037, 1.035, 1.033, 1.014, 1.019, 1.012, 1.016, 1.003, 1.019, 1.02, 1.029, 1.018, 1.017, 1.04, 1.054, 1.039, 1.045, 1.034, 1.041, 1.026, 1.029, 1.057, 1.041, 1.059, 1.056, 1.064, 1.069, 1.065, 1.06, 1.065, 1.064, 1.071, 1.101, 1.15, 1.126, 1.127, 1.133, 1.139, 1.18, 1.191, 1.195, 1.187, 1.2, 1.184, 1.227, 1.195, 1.206, 1.189, 1.192, 1.195, 1.185, 1.176, 1.176, 1.172, 1.182, 1.177, 1.178, 1.174, 1.179, 1.176, 1.171, 1.172, 1.166, 1.144, 1.131, 1.129, 1.124, 1.118];

    private const BTC_RISE_THEN_FALL = [27964.36, 27938.53, 27956.18, 27951.1, 27962.1, 28005.48, 27949.36, 27879.07, 27854.48, 27832.3, 27850.01, 27846.55, 27842.97, 27867.75, 27849.09, 27860.16, 27845.09, 27873.98, 27863.9, 27871.37, 27856.54, 27873.8, 27912.87, 27888.31, 27904.32, 27903.6, 27927.13, 27901.88, 27889.47, 27912.22, 27890.99, 27832.27, 27875.95, 27825.06, 27852.41, 27705.15, 27709.84, 27744.23, 27770.42, 27787.98, 27753.6, 27792.14, 27784.79, 27816.39, 27798.67, 27814.82, 27805.38, 27805.19, 27810.78, 27788.18, 27794.58, 27824.91, 27823.1, 27841.58, 27829.92, 27829.99, 27923.4, 27903.58, 27912.78, 27932.68, 27910, 27916.17, 27888, 27919.56, 27934.75, 27900.13, 27939.77, 27927.27, 27929.22, 27905.66, 27876.42, 27897.59, 27839.66, 27902.01, 27852.9, 27803.02, 27776.78, 27740.4, 27758.95, 27741.11, 27782.17, 27724.85, 27813.43, 27701.67, 27678.05, 27555.35, 27327.25, 27360.97, 27412.83, 27290.01, 26850.1, 26853.48, 26881.91, 26878.23, 26886.61, 26908.11, 27130, 27271.86, 27181.29, 27193.43, 27144.44, 27116.07, 27150.34, 27101.44, 27048.21, 27036, 27040.17, 26985.33, 26981.27, 27097.81, 27057.99, 27081.51, 27125, 27103.32, 27067.65, 27061.67, 27124.12, 27018.12, 27029.49, 26957.62, 26973.29, 26948, 26998.81, 27005.22, 26991.6, 27035.59, 27108.23, 27116.57, 27139.99, 27143.61, 27130.91, 27158.4, 27163.99, 27176.06, 27152.5, 27115.22, 27104.81, 27110.09, 27110.27, 27131.66, 27145.05, 27157.49, 27136.15, 27127.86, 27111.38, 27079.08, 27089.34, 27069.99, 27042.2, 26973.54, 26892.53, 27001, 27014.88, 27147.49, 27080.86, 27089.46, 27056.44, 27062.58, 27016.26, 27029.31, 27023.57, 27045.92, 27040.78, 27002.21, 26973.67, 26930, 26963.52, 26966.87, 26945.28, 26980.77, 26934.38, 26940.2, 26904.8, 26926.18, 26957.57, 26922.51, 26915.51, 26947.86, 26940.28, 26959.89, 27085, 27083.59, 27083.99, 27109.94, 27063.18, 27070.52, 27057.75, 27017.3, 27041.88, 27037.37, 27052.23, 26951.56, 26977.54, 26954.31, 26968.43, 26948.16, 26985.04, 27010.18, 27008.06, 27044.78, 26969.03, 26955.78, 26858.61, 26904.53, 26913.84, 26887.96, 26803.69, 26695, 26695.19, 26738.48, 26772.32, 26831.39, 26939.97, 26907.62, 26911.14, 27076.27, 27127.49, 27039.86, 26900, 26927.65, 27013.74, 26978.46, 26984.33, 26879.84, 26870.51, 26878.27, 26926.1, 26904.67, 26988.35, 27000.85, 26988.04, 26939.33, 26972.86, 26934.57, 26974.01, 26977.1, 26971.51, 27054.77, 26957.6, 26969.44, 26947.9, 26900.38, 26906.99, 26917.53, 26906, 26876.02, 26901.46, 26856.72, 26833.09, 26867.45, 26823.47, 26859.19, 26842.02, 26892.03, 26895.71, 26914.83, 27213.98, 27377.15, 27300.02, 27200, 27262.73, 27266.17, 27313.68, 27412.8, 27374.52, 27314.25, 27330.28, 27327.96, 27300.84, 27304.25, 27281.18, 27261.19, 27253.66, 27240.47, 27213.05, 27191.99, 27181.86, 27210.06, 27232.94, 27194.13, 27195.13, 27205.26, 27281.71, 27224.61, 27275.48, 27255, 27289.19, 27258.38, 27278.14, 27272.49, 27294.48, 27289.79, 27257.99, 27264.14, 27288.37, 27397.12, 27411.39, 27366, 27328.55, 27315.57, 27315.28, 27304.29, 27373.36, 27380.87, 27378.76, 27402.8, 27391.1, 27388.05, 27361.01, 27372.21, 27334.52, 27365.08, 27365.98, 27354.02, 27410.97, 27560.02, 27541.57, 27581.92, 27631.17, 27573.99, 27609.96, 27531.07, 27539.76, 27540, 27524.23, 27577.52, 27839.15, 28112.72, 28080.01, 28058.11, 28011.12, 28041.99, 28073.72, 28082.98, 28132.49, 28075.39, 28080.11, 28349.34, 28479.97, 28610.46, 28487, 28530.58, 28474.4, 28494.44, 28512.53, 28443.97, 28374.78, 28333.13, 28347.53, 28281.84, 28413.66, 28418.66, 28369.18, 28390.28, 28303.85, 28288.75, 28359.36, 28309.2, 28341.73, 28365.98, 28387.74, 28322.75, 28334.56, 28322.49, 28369.56, 28426.42, 28397.97, 28383.18, 28351.2, 28421.56, 28390.18, 28406.5, 28420.04, 28517.64, 28390.1, 28325.93, 28308.58, 28289.99, 28309.53, 28341.59, 28415.96, 28439.61, 28441, 28403.36, 28339.37, 28332.59, 28366.18, 28354.92, 28239.54, 28205.81, 28230.26, 28259.53, 28306.48, 28243.5, 28196.34, 28238.44, 28274.99, 28232.5, 28256.44, 28286.26, 28301.12, 28320.21, 28334.51, 28369.18, 28366.47, 28319.99, 28342.37, 28426.79, 28395.05, 28427.06, 28444.94, 28432.01, 28377.99, 28372.95, 28372.27, 28370, 28486.8, 28412.11, 28350.29, 28392.05, 28286.24, 28320.54, 28360.15, 28343.15, 28368.91, 28412.76, 28425.86, 28408.83, 28417.07, 28393.08, 28366.46, 28348.51, 28335.53, 28415.3, 28405.45, 28431.09, 28379.93, 28318.88, 28299.99, 28319.99, 28332.76, 28323.45, 28341.82, 28366.3, 28406.6, 28408.95, 28774.99, 29058.75, 29089.98, 28997.69, 28463.81, 28470.17, 28460.96, 28497.14, 28527.08, 28512.19, 28510.02, 28593.3, 28634.39, 28686.94, 28579.93, 28623, 28550.99, 28566.92, 28492.27, 28548.89, 28588.63, 28618.08, 28638.41, 28588.86, 28567.93, 28615.71, 28609.38, 28623.71, 28599.99, 28582.11, 28631.98, 28729.32, 28687, 28713.15, 28724.39, 28711.48, 28703.24, 28652.59, 28623.7, 28596.7, 28559.7, 28548.07, 28565.32, 28571.77, 28580, 28590.56, 28576.7, 28591.16, 28571.17, 28554.09, 28561.56, 28611.4, 28621.16, 28611.2, 28642.6, 28647.69, 28656.94, 28670.18, 28598.64, 28608.47, 28656.06, 28663.59, 28683.61, 28643.21, 28594.44, 28626.78, 28574.42, 28557.15, 28554.16, 28540.67, 28492.18, 28337.11, 28376.02, 28405.03, 28407.55, 28446.21, 28443.54, 28456.87, 28381.26, 28363.15, 28285.53, 28268.38, 28173.26, 28170.01, 28205.68, 28267.38, 28255.87, 28242.2, 28249.21, 28214.99, 28141.52, 27822.01, 27835.01, 27827.53, 27781.08, 27836.88, 27878.83, 27921.81, 27894.67, 27911.03, 27936.74, 27938.12, 28035.94, 27984.36, 27998.78, 27997.09, 28003.02, 27928.49, 27981.26, 28154.93, 28124.58, 28110.82, 28123.73, 28102.38, 28075.34, 28085.99, 28090.36, 28106.85, 28109.37, 28100.59, 28051.53, 28055.86, 27891.57, 27916.51, 27978.41, 27998.99, 28008, 28011.12, 28022.69, 28025.14, 27975.88, 28021.67, 28112.89, 28134.45, 28297, 28284.39, 28252.72, 28250.85, 28179.58, 28154.76, 28152.92, 28159.4, 28106.1, 28145.21, 28175.93, 28197.2, 28143.27, 28143.93, 28136.38, 28183.16, 28192.39, 28138.27, 28182.97, 28136.92, 28121.33, 28148.1, 28169.34, 28189.25, 28183.73, 28201.86, 28141.79, 28142.33, 28159.41, 28139.19, 28013.99, 28027.6, 28077.21, 28076.17, 28014.71, 28081.59, 28072.96, 28030.2, 27904.7, 27794.54, 27715, 27590.62];

    public function load(ObjectManager $manager): void
    {
        $currentDate = new \DateTime();
        $currentDate->modify('+15 minutes')->setTime($currentDate->format('H'), 0);

        $symbols = $this->createSymbols($manager);

        $date = clone $currentDate;
        foreach (array_reverse(self::CHANGING_PRICE_15_PERCENT_UP) as $item) {
            [$priceValue, $symbol] = $item;
            $price = $this->createPriceEntity($priceValue, $symbols[$symbol], $date);
            $manager->persist($price);
        }
        $manager->flush();

        $date = clone $currentDate;
        foreach (self::CHANGING_PRICE_15_PERCENT_UP as $item) {
            [$priceValue] = $item;
            $price = $this->createPriceEntity($priceValue, $symbols[self::PRICE_TO_BOTTOM_SYMBOL], $date);
            $manager->persist($price);
        }
        $manager->flush();

        $date = clone $currentDate;
        foreach (self::CHANGING_PRICE_TOP_BOTTOM_TOP as $priceValue) {
            $price = $this->createPriceEntity($priceValue, $symbols[self::PRICE_TOP_BOTTOM_TOP_SYMBOL], $date);
            $manager->persist($price);
        }
        $manager->flush();

        $date = clone $currentDate;
        foreach (self::NOT_RECENTLY_CHANGED_PRICE as $priceValue) {
            $price = $this->createPriceEntity($priceValue, $symbols[self::NOT_RECENTLY_CHANGED_PRICE_SYMBOL], $date);
            $manager->persist($price);
        }
        $manager->flush();

        $date = clone $currentDate;
        foreach (self::RECENTLY_CHANGED_PRICE as $priceValue) {
            $price = $this->createPriceEntity($priceValue, $symbols[self::RECENTLY_CHANGED_PRICE_SYMBOL], $date);
            $manager->persist($price);
        }
        $manager->flush();

        $date = clone $currentDate;
        foreach (array_reverse(self::RECENTLY_CHANGED_PRICE_WITH_PLATO) as $priceValue) {
            $price = $this->createPriceEntity($priceValue, $symbols[self::RECENTLY_CHANGED_PRICE_WITH_PLATO_SYMBOL], $date);
            $manager->persist($price);
        }
        $manager->flush();

        $date = clone $currentDate;
        foreach (array_reverse(self::TWT_RISING_ON_INTERVAL_AND_THEN_FALLING_ON_DISTANCE) as $priceValue) {
            $price = $this->createPriceEntity($priceValue, $symbols[self::TWT_RISING_ON_INTERVAL_AND_THEN_FALLING_ON_DISTANCE_SYMBOL], $date);
            $manager->persist($price);
        }
        $manager->flush();

        $date = clone $currentDate;
        foreach (array_reverse(self::MINA_FALLING_AFTER_RISING_WITH_BIG_DIFF_BETWEEN_HIGH_AND_LOW) as $priceValue) {
            $price = $this->createPriceEntity($priceValue, $symbols[self::MINA_FALLING_AFTER_RISING_WITH_BIG_DIFF_BETWEEN_HIGH_AND_LOW_SYMBOL], $date);
            $manager->persist($price);
        }
        $manager->flush();

        $date = clone $currentDate;
        foreach (array_reverse(self::BTC_RISE_THEN_FALL) as $priceValue) {
            $price = $this->createPriceEntity($priceValue, $symbols[self::BTC_RISE_THEN_FALL_SYMBOL], $date);
            $manager->persist($price);
        }
        $manager->flush();
    }

    private function createPriceEntity(float $priceValue, Symbol $symbol, \DateTimeInterface $currentDate): Price
    {
        $price = new Price();
        $price
            ->setPrice($priceValue)
            ->setSymbol($symbol)
            ->setDatetime(clone $currentDate->modify('-15 minutes'))
        ;
        return $price;
    }

    private function createSymbols(ObjectManager $manager): array
    {
        $user = $manager->getRepository(User::class)->findOneBy([]);
        /** @var Symbol[] $data */
        $data = [];
        foreach (self::SYMBOLS as $symbolName) {
            $data[$symbolName] = (new Symbol())
                ->setName($symbolName)
            ;
            $userSymbol = (new UserSymbol())
                ->setUser($user)
                ->setSymbol($data[$symbolName])
            ;
            $manager->persist($data[$symbolName]);
            $manager->persist($userSymbol);
        }

        return $data;
    }
}
